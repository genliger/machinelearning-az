help.start()
;
;
help.start();
library(caTools, lib.loc = "/usr/lib/R/site-library")
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, splitRatio = 0.8)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
dataset = read.csv("Data.csv")
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
#Codificar variables categoricas
dataset$Country = factor(dataset$Country,
levels  = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes","No"),
labels = c(1,0))
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
#Codificar variables categoricas
dataset$Country = factor(dataset$Country,
levels  = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes","No"),
labels = c(1,0))
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
detach("package:caTools", unload = TRUE)
dataset = read.csv("Data.csv")
library(caTools, lib.loc = "/usr/lib/R/site-library")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
getwd()
getwd()
setwd("Documents/machinelearning-az/misPracticas/practicasRstudio")
getwd();
setwd("/home/panda/Documents/machinelearning-az/misPracticas/practicasRstudio")
dataset = read.csv("/Documents/machinelearning-az/misPracticas/practicasRstudio/Data.csv")
dataset = read.csv("./Documents/machinelearning-az/misPracticas/practicasRstudio/Data.csv")
dataset = read.csv("/home/panda/Documents/machinelearning-az/misPracticas/practicasRstudio/Data.csv")
setwd("~/Documents/machinelearning-az/misPracticas/practicaRstudio")
# platilla para cargar datos
#importar dataset
getwd()
setwd("/home/panda/Documents/machinelearning-az/misPracticas/practicasRstudio")
dataset = read.csv("/home/panda/Documents/machinelearning-az/misPracticas/practicasRstudio/Data.csv")
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
#Codificar variables categoricas
dataset$Country = factor(dataset$Country,
levels  = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes","No"),
labels = c(1,0))
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
library(caTools, lib.loc = "/usr/lib/R/site-library")
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
View(dataset)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set  = subset(dataset, split == TRUE)
testing_set  = subset(dataset, split == FALSE)
view(training_set)
View(training_set)
training_set = scale(training_set)
training_set[,2:3] = scale(training_set[,2:3])
testing_set[,2:3] = scale(testing_set[,2:3])
View(testing_set)
View(training_set)
setwd("~/Documents/ML/machinelearning-az/misPracticas/practicaRstudio")

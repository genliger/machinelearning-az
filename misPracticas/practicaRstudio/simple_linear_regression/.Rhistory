help.start()
;
;
help.start();
library(caTools, lib.loc = "/usr/lib/R/site-library")
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, splitRatio = 0.8)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
dataset = read.csv("Data.csv")
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
#Codificar variables categoricas
dataset$Country = factor(dataset$Country,
levels  = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes","No"),
labels = c(1,0))
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
#tratamiento de N/A
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) ,
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean (x, na.rm = TRUE)),
dataset$Salary)
#Codificar variables categoricas
dataset$Country = factor(dataset$Country,
levels  = c("France", "Spain", "Germany"),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("Yes","No"),
labels = c(1,0))
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
detach("package:caTools", unload = TRUE)
dataset = read.csv("Data.csv")
library(caTools, lib.loc = "/usr/lib/R/site-library")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
dataset = read.csv("Data.csv")
setwd("~/Documents/ML/machinelearning-az/misPracticas/practicaRstudio/simple_linear_regression")
dataset = read.csv("Salary_Data.csv")
View(dataset)
dataset = read.csv("Salary_Data.csv")
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set  = subset(dataset, split == TRUE)
testing_set  = subset(dataset, split == FALSE)
library(caTools, lib.loc = "/usr/lib/R/site-library")
dataset = read.csv("Salary_Data.csv")
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set  = subset(dataset, split == TRUE)
testing_set  = subset(dataset, split == FALSE)
#ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperiencie,
data = training_set)
View(dataset)
#ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
#predecir con el conjunto de testing
y_pred = predict(regressor, newdata = testing_set)
View(testing_set)
y_pred
library(ggplot2, lib.loc = "/usr/lib/R/site-library")
#visualización en el conjunto de entrenamiento
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = y_pred),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
y_pred = predict(regressor, newdata = testing_set)
y_pred
#visualización en el conjunto de entrenamiento
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = y_pred),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = y_pred),
colour = "blue")
dataset = read.csv("Salary_Data.csv")
#dividir set de datos en test y entrenamiento
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set  = subset(dataset, split == TRUE)
testing_set  = subset(dataset, split == FALSE)
View(training_set)
#ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#predecir con el conjunto de testing
y_pred = predict(regressor, newdata = testing_set)
y_pred
#visualización en el conjunto de entrenamiento
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = y_pred),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
#visualización en el conjunto de entrenamiento
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = predict(regressor,newdata = training_Set)),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
#visualización en el conjunto de entrenamiento
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = predict(regressor,newdata = training_set)),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
#visualización en el conjunto de entrenamiento
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = predict(regressor,newdata = training_set)),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=y_pred),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = predict(regressor,newdata = training_set)),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
ggplot()+
geom_point(aes(x=training_set$YearsExperience, y=y_pred),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = predict(regressor,newdata = testing_set)),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
## visualizacion de resultados en conjunto de testing
ggplot()+
geom_point(aes(x=testing_set$YearsExperience, y=testing_set$Salary),
colour = "red") +
geom_line(aes(x=training_set$YearsExperience,
y = predict(regressor,newdata = training_set)),
colour = "blue") +
ggtitle("suelvos vs años, conjunto de entrenaiento") +
xlab("años de experiencia") +
ylab("sueldo $")
